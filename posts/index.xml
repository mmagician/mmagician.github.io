<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on mmagician</title><link>https://mmagician.github.io/posts/</link><description>Recent content in Posts on mmagician</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 22 Aug 2022 11:03:00 +0200</lastBuildDate><atom:link href="https://mmagician.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Non-native arithmetic</title><link>https://mmagician.github.io/posts/non-native/</link><pubDate>Mon, 22 Aug 2022 11:03:00 +0200</pubDate><guid>https://mmagician.github.io/posts/non-native/</guid><description>As with the previous post, this isn&amp;rsquo;t intended to serve as an introduction to SNARKs, recursive proofs nor pairing-friendly curves. Rather, it&amp;rsquo;s an attempt to explain a topic that comes up often in conjunction with the aforementioned terms, namely non-native field arithmetic. I&amp;rsquo;ll first explain the why: the context of where non-native arithmetic arises. Then I will try to define the what: by comparing it to native arithmetic and describing in what part of SNARKs each of them is used.</description></item><item><title>From one {point,poly} to multi {point,poly} commitment schemes</title><link>https://mmagician.github.io/posts/poly_commit/</link><pubDate>Mon, 01 Aug 2022 11:03:00 +0200</pubDate><guid>https://mmagician.github.io/posts/poly_commit/</guid><description>This is my first entry here, so I would highly appreciate any feedback.
This is not an introduction to PCS. Instead, I will use some statements from vanilla KZG and build upon these for multiple points and multiple polynomials. If you are new to PCS, I recommend the intro by Dankrad Feist or the original KZG paper.
Polynomial committment schemes The primary focus of this article is to explore various flavours of KZG polynomial commitment scheme:</description></item></channel></rss>